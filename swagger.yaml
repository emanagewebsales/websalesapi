swagger: '2.0'
info:
  version: v1
  title: eManage CRM - Sales API
  description: |

    #About
    <p>
      The <strong>Emanage CRM Sales API</strong> is the conjunction of HTTP-based APIs that allows any website to integrates with <strong>eManageCRM</strong>. The APIs will allow to query campaign's data, such as products and prices, also allow to create new customers, post new orders and submit payments. This documentation describes all end-points available and their functionalities.
    </p>

    #Allowed methods HTTPs requests
    <table class="table" >
      <tr>
        <th>Method</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>PUT </td>
        <td>Update resource</td>
      </tr>
      <tr>
        <td>POST </td>
        <td>To create resource</td>
      </tr>
      <tr>
        <td>GET </td>
        <td>Get a resource or list of resources</td>
      </tr>
      <tr>
        <td>DELETE </td>
        <td>Remove resource</td>
      </tr>
    </table>
    
      #HTTP responses
    <table class="table" >
      <tr>
        <th>Response code</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><strong>200</strong> </td>
        <td><code>OK</code> The request was successful (some API calls may return 201 instead).</td>
      </tr>
      <tr>
        <td><strong>201</strong></td>
        <td><code>Created</code> The request was successful and a resource was created. </td>
      </tr>
      <tr>
        <td><strong>204</strong></td>
        <td><code>No Content</code> The request was successful but there is no representation to return (i.e. the response is empty).</td>
      </tr>
      <tr>
        <td><strong>400</strong></td>
        <td><code>Bad Request</code> The request could not be understood or was missing required parameters.</td>
      </tr>
      <tr>
        <td><strong>401</strong></td>
        <td><code>Unauthorized</code> Authentication failed or user doesn't have permissions for requested operation.</td>
      </tr>
      <tr>
        <td><strong>403</strong></td>
        <td><code>Forbidden</code> Access denied.</td>
      </tr>
      <tr>
        <td><strong>404</strong></td>
        <td><code>Not Found</code> The requested resource could not be found.</td>
      </tr>
      <tr>
        <td><strong>405</strong></td>
        <td><code>Method Not Allowed</code> Requested method is not supported for resource.</td>
      </tr>
    </table>
    
        
    #Quickstart
    
    <hr/>

      <strong>Some important things to have in mind before starting any integration!<br> Before starting any integration, please nake sure to have: </strong>
      
      <ul>
        <li><strong>X_CID: </strong>That will be your client key. As soon as a new client onboard in eManageCRM, they will receive this key with their instance package. That is required to be added in the header of every call in the <strong>Sales API</strong>.</li>
        <li><strong>Campaign WebKey: </strong>For each new campaign, a new webkey will be generated. You will constantly see that information being requested in our APIs. That will be the campaign key used to connect the offer website to our CRM.<br><img src='https://s3.amazonaws.com/emanage-analytics/webkey.png' alt='api_browser_schema'  /></li>
      </ul>
      
      
      In order to have <strong>Sales API</strong> working adequately, the campaign being used must be configured with status <strong>'Active with Traffic'</strong>. 
      Considering that you already have that, please follow bellow the steps that are mandatory:
      <ul>
        <li><strong>Get the customer location: </strong>This step <strong>is not</strong> mandatory, however it allows you to get the customer geolocation. In case that you are setting the prices based on their location, it is <strong>very important</strong> to use this GET method. In case that there is no relevance, you could simply ignore this method, and consider the prices from the location desired for your offer.</li>
        <li><strong>Get countries set up in the campaign: </strong>That is a important step from our flow. This API GET method will bring you a list with all countries configured for that specific campaign with all the particularities from the currency (sign, name and code).</li>
        <li><strong>Place a new order: </strong>That is the main API call. Once you gatter all information, you will use the Place Order method to input all that data and process the payment from that order.</li>
      </ul>
      
    <table>
    <tr>
    <td align='center'>
    <map name="api_schema_map"> 
    <area href="https://www.tryemanage.com/docs/api/index.html#/reference/customers/customer-location" shape=poly coords="215,35, 365,35, 365,65, 215,65">
    <area href="https://www.tryemanage.com/docs/api/index.html#/reference/products/prices" shape=poly coords="120,175, 292,175, 292,196, 120,196">
    <area href="https://www.tryemanage.com/docs/api/index.html#/reference/campaigns/countries-list" shape=poly coords="120,196, 292,196, 292,224, 120,224">
    <area href="https://www.tryemanage.com/docs/api/index.html#/reference/coupons/apply-coupon" shape=poly coords="120,224, 292,224, 292,246, 120,246">
    <area href="https://www.tryemanage.com/docs/api/index.html#/reference/orders/place-order" shape=poly coords="157,311, 321,311, 321,363, 157,363">
    <area href="https://www.tryemanage.com/docs/api/index.html#/reference/products/prices" shape=poly coords="124,438, 294,438, 294,463, 124,463">
    <area href="https://www.tryemanage.com/docs/api/index.html#/reference/coupons/apply-coupon" shape=poly coords=" 124,463, 294,463, 294,493, 124,493">
    <area href="https://www.tryemanage.com/docs/api/index.html#/reference/orders/place-order" shape=poly coords="159,572, 318,572, 318,620, 159,620">
    <area href="https://www.tryemanage.com/docs/api/index.html#/reference/customers/create-or-update" shape=poly coords="214,706, 370,706, 370,740, 214,740">
    </map>
    <center>
    <img src="https://s3.amazonaws.com/emanage-analytics/docs/schema2_500.png" alt="CRM api schema" width=500 height=788 usemap="#api_schema_map" style="margin:0 auto">
    </center>
    </td>
    </tr>
    </table>

   

host: sales-prod.tryemanagecrm.com
tags:
  - name: Callback
    description: Things regarding to callbacks
    #externalDocs:
    #  description: Find out more
    #  url: 'http://swagger.io'
  - name: Campaigns
    description: Everything about the Campaign
  - name: Chargeback
    description: Chargeback related
  - name: Coupons
    description: Everything regarding Coupons
  - name: Customers
    description: Everything regarding our Customers
  - name: Files
    description: Everything regarding Coupons
  - name: FraudPrevention
    description: Everything regarding Coupons
  - name: Orders
    description: Everything about Order and beyond
  - name: Payments
    description: Payment & transaction related
  - name: Products
    description: Everything regarding Product
  - name: ShoppingCart
    description: All shopping cart related 

schemes:
  - https
paths:
  #/api/callback/onpex:
  #  get:
  #    tags:
  #      - Callback
  #    operationId: Callback_Get
  #    consumes: []
  #    produces:
  #      - application/json
  #      - text/json
  #      - application/xml
  #      - text/xml
  #    parameters:
  #      - name: mcTxId
  #        in: query
  #        required: true
  #        type: string
  #    responses:
  #      '200':
  #        description: OK
  #        schema:
  #          $ref: '#/definitions/PlaceOrderUpdateReturnViewModel'
  #  post:
  #    tags:
  #      - Callback
  #    operationId: Callback_Post
  #    consumes:
  #      - application/json
  #      - text/json
  #      - application/xml
  #      - text/xml
  #      - application/x-www-form-urlencoded
  #    produces:
  #      - application/json
  #      - text/json
  #      - application/xml
  #      - text/xml
  #    parameters:
  #      - name: model
  #        in: body
  #        required: true
  #        schema:
  #          $ref: '#/definitions/CallbackOnpex'
  #    responses:
  #      '200':
  #        description: OK
  #        schema:
  #          type: object
  #/api/callback/aftership:
  #  post:
  #    tags:
  #      - Callback
  #    operationId: Callback_PostAftership
  #    consumes:
  #      - application/json
  #      - text/json
  #      - application/xml
  #      - text/xml
  #      - application/x-www-form-urlencoded
  #    produces:
  #      - application/json
  #      - text/json
  #      - application/xml
  #      - text/xml
  #    parameters:
  #      - name: model
  #        in: body
  #        required: true
  #        schema:
  #          $ref: '#/definitions/CallbackAftership'
  #    responses:
  #      '200':
  #        description: OK
  #        schema:
  #          type: object
  '/api/campaigns/{webkey}/settings':
    x-summary: Campaign Settings
    x-description: |
      <p>Retrieves basic campaign information, such as campaign name and default language code.
      It can be useful at a development stage to find a campaign based on a webkey. </p>
      <p>Since there can be multiple websites in development simultaneously, there should be an easy way to determine what campaign is being currently used at a specific website. This information shouldn't be revealed to the customer but can be displayed in the console during development.</p>
    get:
      summary: GET /campaigns/{webkey}/settings
      tags:
        - Campaigns
      operationId: Campaigns_GetCampaignSettings
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
          description: The unique ID of each campaign
        - name: X_CID
          in: header
          required: true
          type: string
          description: The X_CID specific client
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignSettingsViewModel'
  '/api/campaigns/{webkey}/customfields':
    x-summary: Custom Fields
    x-description: |
      <p>Any custom field that can be created while setting up the campaign.</p>
    get:
      summary: GET /campaigns/{webkey}/customfields
      tags:
        - Campaigns
      operationId: Campaigns_GetCustomFields
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
          description: The unique ID of each campaign
        - name: X_CID
          in: header
          required: true
          type: string
          description: The X_CID specific client
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignCustomFieldViewModel'
  #'/api/campaigns/{webkey}/mid':
  #  get:
  #    tags:
  #      - Campaigns
  #    operationId: Campaigns_GetMidAvailability
  #    consumes: []
  #    produces:
  #      - application/json
  #      - text/json
  #      - application/xml
  #      - text/xml
  #    parameters:
  #      - name: webkey
  #        in: path
  #        required: true
  #        type: string
  #        format: uuid
  #      - name: ip
  #        in: query
  #        required: false
  #        type: string
  #    responses:
  #      '200':
  #        description: OK
  #        schema:
  #          type: boolean
  '/api/campaigns/{webkey}/countries':
    x-summary: Countries list
    x-description: |
      <p>To place an order we need to have customers address. There are specific countries selected in the campaign and we need to have those countries listed on our website. Since we can have one website template for different campaigns, we want the list of countries to be dynamically populated in every instance of the website.</p>
      <p>This endpoint returns a list of countries selected in the campaign. Once retrieved the list can be used in the dropdown.</p>
    get:
      summary: GET /api/campaigns/{webkey}/countries
      tags:
        - Campaigns
      operationId: Campaigns_GetCountries
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
          description: The unique ID of each campaign
        - name: X_CID
          in: header
          required: true
          type: string
          description: The X_CID specific client
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignCountryViewModel'
  '/api/campaigns/{webkey}/countrystates':
    x-summary: States/Provinces
    x-description: |
      Each country might have multiple states/provinces. We can also retrieve this data as soon as we have a list of countries. A good practice would be to get states/provinces after a customer selects a country. We already know how to get customer location. So usually both country and states/provinces are going to be ready as soon as we get customer location.
    get:
      summary: GET /api/campaigns/{webkey}/countrystates
      tags:
        - Campaigns
      operationId: Campaigns_GetCountryStates
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
          description: The unique ID of each campaign
        - name: X_CID
          in: header
          required: true
          type: string
          description: The X_CID specific client
        - name: countryCode
          in: query
          required: false
          type: string
          description: The country code of the State
        - name: languageCode
          in: query
          required: false
          type: string
          description: The language code of the State
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignCountryStateViewModel'
  '/api/campaigns/{webkey}/affiliate':
    x-summary: Affiliate
    x-description: |
      --- Description pending ---
    post:
      summary: POST /api/campaigns/{webkey}/affiliate
      tags:
        - Campaigns
      operationId: Campaigns_Post
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
          description: The unique ID of each campaign
        - name: X_CID
          in: header
          required: true
          type: string
          description: The X_CID specific client
        - name: model
          in: body
          required: true
          schema:
            $ref: '#/definitions/CampaignAffiliateSaveViewModel'
      responses:
        '200':
          description: OK
          schema:
            type: object
  '/api/campaigns/{webkey}/upsells':
    x-summary: Upsells
    x-description: |
      <p>After the customer placed an order we can offer them upsells configured in the campaign.</p>
      <p>The upsells api provides a list of upsells. Each upsell has its own campaign Webkey and URL. The new Webkey can be used to retrieve all necessary data for the upsell offer and to purchase upsell products.</P>
    get:
      summary: GET /api/campaigns/{webkey}/upsells
      tags:
        - Campaigns
      operationId: Campaigns_GetUpsells
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
          description: The unique ID of each campaign
        - name: X_CID
          in: header
          required: true
          type: string
          description: The X_CID specific client
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignUpsellItemViewModel'
  #/api/sofort/chargebacks:
  #  post:
  #    tags:
  #      - Chargebacks
  #    operationId: Chargebacks_Post
  #    consumes:
  #      - application/json
  #      - text/json
  #      - application/xml
  #      - text/xml
  #      - application/x-www-form-urlencoded
  #    produces:
  #      - application/json
  #      - text/json
  #      - application/xml
  #      - text/xml
  #    parameters:
  #      - name: xml
  #        in: body
  #        required: true
  #        schema:
  #          $ref: '#/definitions/XElement'
  #    responses:
  #      '200':
  #        description: OK
  #        schema:
  #          type: object
  '/api/campaigns/{webkey}/coupons/{couponCode}':
    x-summary: Coupon Info
    x-description: |
      <p>This endpoint is used to get detailed information about a coupon behaviour. Discount and minimum purchase amounts are provided as raw values as well as formatted with a specific currency.</p><p>The information can be used for development purposes or displayed to a customer once they fill in a coupon code.</p>
    get:
      summary: GET /api/campaigns/{webkey}/coupons/{couponCode}
      tags:
        - Coupons
      operationId: Coupons_GetCoupon
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
          description: The unique ID of each campaign
        - name: X_CID
          in: header
          required: true
          type: string
          description: The X_CID specific client
        - name: couponCode
          in: path
          required: true
          type: string
          description: Coupon Code ID
        - name: currencyCode
          in: query
          required: true
          type: string
          description: Currency Code ID
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignCouponViewModel'
  '/api/campaigns/{webkey}/coupons/{couponCode}/calculate':
    x-summary: Apply Coupon
    x-description: |
      <p>Normally, this endpoint is applied to determine final price and shipping discount.</p><p>These details are just for informational purposes. The coupon code still needs to be included in the order to work. The final price will be calculated in CRM.</p><p>The method can be used after a customer filled a coupon code and chose a product.</p>
    get:
      summary: GET /api/campaigns/{webkey}/coupons/{couponCode}/calculate
      tags:
        - Coupons
      operationId: Coupons_GetCouponCalculated
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
          description: The unique ID of each campaign
        - name: X_CID
          in: header
          required: true
          type: string
          description: The X_CID specific client
        - name: couponCode
          in: path
          required: true
          type: string
          description: Coupon code ID
        - name: currencyCode
          in: query
          required: true
          type: string
          description: Currency code ID
        - name: productPrice
          in: query
          required: true
          type: number
          format: double
          description: The price set for the product
        - name: shippingPrice
          in: query
          required: true
          type: number
          format: double
          description: The shipping fee
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignCouponCalculatedViewModel'
  '/api/customers':
    x-summary: Get Customer Information
    x-description: |
      <p>Get customer information based on an email. Normally it is recommended to use the information entered by the customer and not to reveal any sensitive data to an unknown user. However, it is possible to have all previous addresses for an existing user.</p><p>As an example, once a customer filled their email they can be asked whether they want to have products shipped to their current address in "New York, Madison Ave".</p>
    get:
      summary: GET /api/customers
      tags:
        - Customers
      operationId: Customers_Get
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: email
          in: query
          required: true
          type: string
          description: Customer's email address
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerViewModel'
  '/api/customers/{webkey}':
    x-summary: Create or Update Customer Information
    x-description: |
      <p>Create new or update existing customer information. Typically there is no need to create a new customer because it is created (or updated) automatically when an order is placed. </p><p>Updating a customer is useful in case the customer had changed their address or we couldn't verify their address. In this case, it is suggested to let the customer know that the address needs to be clarified.</p>
    put:
      summary: PUT /api/customers/{webkey}
      tags:
        - Customers
      operationId: Customers_Put
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
          description: The unique ID of each campaign
        - name: X_CID
          in: header
          required: true
          type: string
          description: The X_CID specific client
        - name: email
          in: query
          required: true
          type: string
          description: Customer's email address
        - name: model
          in: body
          required: true
          schema:
            $ref: '#/definitions/CustomerAddressOrderSaveViewModel'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerReturnViewModel'
    post:
      summary: POST /api/customers/{webkey}
      tags:
        - Customers
      operationId: Customers_Post
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
          description: The unique ID of each campaign
        - name: X_CID
          in: header
          required: true
          type: string
          description: The X_CID specific client
        - name: model
          in: body
          required: true
          schema:
            $ref: '#/definitions/CustomerSaveViewModel'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerViewModel'
  '/api/customers/shippingaddress':
    x-summary: Shipping Address
    x-description: |
      <p>TBC - This endpoint is to used to create/update shipping address. Typically there is no need to create a new shipping address because it is created automatically when an order is placed by customer.</p>
      <p>Creating a shipping address is useful in case there is a new shipping address for the customer. In this case, it is suggested to let the customer know that the shipping address will be changed from original input.<p>
    post:
      summary: POST /api/customers/shippingaddress
      tags:
        - Customers
      operationId: Customers_PostUpdateShippingAddress
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: model
          in: body
          required: true
          schema:
            $ref: '#/definitions/CustomerAddressUpdateViewModel'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerUpdateReturnViewModel'
  '/api/campaigns/{webkey}/customers/location':
    x-summary: Customer Location
    x-description: |
      <p>This endpoint providers information about customer location.</p><p>It can be used for retrieving products, prefilling forms or changing website content.</P>
    get:
      summary: GET /api/campaigns/{webkey}/customers/location
      tags:
        - Customers
      operationId: Customers_GetLocalization
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
          description: The unique ID of each campaign
        - name: X_CID
          in: header
          required: true
          type: string
          description: The X_CID specific client
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerLocationViewModel'
  '/api/customer/signin':
    x-summary: Customer Sign in
    x-description: |
      <p>TBC</p>
    post:
      summary: POST /api/customer/signin
      tags:
        - Customers
      operationId: Customers_SignIn
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: customer
          in: body
          required: true
          schema:
            $ref: '#/definitions/CustomerPwd'
      responses:
        '200':
          description: OK
          schema:
            type: object
  '/api/customer/upd-pwd':
    x-summary: Update Password
    x-description: |
      <p>TBC</p>
    put:
      summary: PUT /api/customer/upd-pwd
      tags:
        - Customers
      operationId: Customers_UpdatePassword
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: customer
          in: body
          required: true
          schema:
            $ref: '#/definitions/CustomerPwd'
      responses:
        '200':
          description: OK
          schema:
            type: object
  '/api/customer/billing':
    x-summary: Add Billing Date
    x-description: |
      <p>TBC</p>
    post:
      summary: POST /api/customer/billing
      tags:
        - Customers
      operationId: Customers_AddBillingData
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CustomerBillingData'
      responses:
        '200':
          description: OK
          schema:
            type: object
  '/api/customers/export/{datini}/{datend}':
    x-summary: TBD
    x-description: |
      <p>TBC</p>
    get:
      summary: GET /api/customers/export/{datini}/{datend}
      tags:
        - Customers
      operationId: Customers_Get
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: datini
          in: path
          required: true
          type: string
          format: date-time
        - name: datend
          in: path
          required: true
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ExportCustomerViewModel'
  '/api/files/download':
    x-summary: Get Files
    x-description: |
      <p>TBC</p>
    get:
      tags:
        - Files
      operationId: Files_Get
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: key
          in: query
          required: true
          type: string
        - name: id
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
  /api/fraudprevention:
    x-summary: Fraud Prevention
    x-description: |
      <p>TBC</p>
    post:
      tags:
        - FraudPrevention
      operationId: FraudPrevention_Post
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: transaction
          in: body
          required: true
          schema:
            $ref: '#/definitions/FraudAnalysisTransaction'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FraudAnalysisResponse'
  /:
    get:
      tags:
        - Index
      operationId: Index_Get
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      responses:
        '200':
          description: OK
          schema:
            type: object
  '/api/orders/{webkey}':
    put:
      tags:
        - Orders
      operationId: Orders_Put
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: trackingNumber
          in: query
          required: true
          type: string
        - name: model
          in: body
          required: true
          schema:
            $ref: '#/definitions/PlaceOrderUpdateSaveViewModel'
        - name: isTest
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PlaceOrderUpdateReturnViewModel'
    post:
      tags:
        - Orders
      operationId: Orders_Post
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: model
          in: body
          required: true
          schema:
            $ref: '#/definitions/PlaceOrderSaveViewModel'
        - name: behaviorId
          in: query
          required: false
          type: integer
          format: int32
        - name: useShippingCountry
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PlaceOrderSaveResponseViewModel'
  '/api/orders/upsell/{orderNumber}':
    post:
      tags:
        - Orders
      operationId: Orders_Post
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderNumber
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PlaceOrderUpsellReturnViewModel'
  '/api/orders/{orderNumber}':
    post:
      tags:
        - Orders
      operationId: Orders_PostPreAuth
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderNumber
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PlaceOrderConfirmationReturnViewModel'
  '/api/orders/boleto/{orderNumber}':
    post:
      tags:
        - Orders
      operationId: Orders_PostNewUnifiedBoleto
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderNumber
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PlaceOrderBoletoReturnViewModel'
  '/api/orders/mid/{webkey}':
    post:
      tags:
        - Orders
      operationId: Orders_PostGetNextMid
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: model
          in: body
          required: true
          schema:
            $ref: '#/definitions/PlaceOrderMidViewModel'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PlaceOrderMidReturnViewModel'
  '/api/orders/latestorders/{webkey}':
    get:
      tags:
        - Orders
      operationId: Orders_GetLatestOrdersCustomerInfo
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LatestOrdersViewModelModel'
  '/api/orders/{orderNumber}/relatedorders':
    get:
      tags:
        - Orders
      operationId: Orders_GetRelatedOrders
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderNumber
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RelatedOrdersModel'
  '/api/orders/{webkey}/customerorders':
    get:
      tags:
        - Orders
      operationId: Orders_GetCustomerOrders
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: email
          in: query
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerOrdersModel'
  '/api/payments/transactions/{orderNumber}':
    get:
      tags:
        - Payments
      operationId: Payments_Get
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderNumber
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
  '/api/campaigns/{webkey}/products/prices':
    get:
      tags:
        - Products
      operationId: Products_GetCampaignProductPrices
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignProductSimpleListViewModel'
  '/api/campaigns/{webkey}/products/prices/{countryCode}':
    get:
      tags:
        - Products
      operationId: Products_GetCampaignProductPricesByCountry
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: countryCode
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignProductSimpleListViewModel'
  '/api/campaigns/{webkey}/products/list/{countryCode}':
    get:
      tags:
        - Products
      operationId: Products_GetCampaignProductsByCountry
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: countryCode
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignProductSimpleListViewModel'
  '/api/campaigns/{webkey}/products/{productId}/miniupsells':
    get:
      tags:
        - Products
      operationId: Products_GetCampaignMiniUpsellsByCountry
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: productId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignProductListViewModel'
  '/api/campaigns/{webkey}/products/{productId}/miniupsells/{countryCode}':
    get:
      tags:
        - Products
      operationId: Products_GetCampaignMiniUpsells
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: productId
          in: path
          required: true
          type: integer
          format: int32
        - name: countryCode
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignProductSimpleListViewModel'
  '/api/campaigns/{webkey}/products/{productId}/{countryCode}':
    get:
      tags:
        - Products
      operationId: Products_GetCampaignProductById
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: productId
          in: path
          required: true
          type: integer
          format: int32
        - name: countryCode
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignProductViewModel'
  '/api/campaigns/{webkey}/shippings/{productId}':
    get:
      tags:
        - Products
      operationId: Products_GetCampaignShippings
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: productId
          in: path
          required: true
          type: integer
          format: int32
        - name: countryCode
          in: query
          required: false
          type: string
        - name: isMiniUpsell
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignProductShippingViewModel'
  '/api/shoppingcart/{webkey}/new':
    post:
      tags:
        - ShoppingCart
      operationId: ShoppingCart_CreateAsync
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: shoppingCart
          in: body
          required: true
          schema:
            $ref: '#/definitions/ShoppingCartCreateViewModel'
      responses:
        '200':
          description: OK
          schema:
            format: uuid
            type: string
            example: 00000000-0000-0000-0000-000000000000
  '/api/shoppingcart/{webkey}':
    get:
      tags:
        - ShoppingCart
      operationId: ShoppingCart_GetShoppingCart
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: sessionId
          in: query
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShoppingCartPublicViewModel'
  '/api/shoppingcart/{webkey}/checkout':
    post:
      tags:
        - ShoppingCart
      operationId: ShoppingCart_CheckoutAsync
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: details
          in: body
          required: true
          schema:
            $ref: '#/definitions/CheckoutRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CheckoutResponse'
  '/api/shoppingcart/{webkey}/confirmpayment':
    post:
      tags:
        - ShoppingCart
      operationId: ShoppingCart_ConfirmPaymentAsync
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: trackingNumber
          in: query
          required: true
          type: string
        - name: paymentProvider
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConfirmPaymentResponse'
  '/api/shoppingcart/{webkey}/applycoupon':
    post:
      tags:
        - ShoppingCart
      operationId: ShoppingCart_ApplyCouponAsync
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: sessionId
          in: query
          required: true
          type: string
          format: uuid
        - name: couponCode
          in: query
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShoppingCartPublicViewModel'
  '/api/shoppingcart/{webkey}/customers/new':
    post:
      tags:
        - ShoppingCart
      operationId: ShoppingCart_CreateCustomerAccountAsync
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: sessionId
          in: query
          required: true
          type: string
          format: uuid
        - name: details
          in: body
          required: true
          schema:
            $ref: '#/definitions/CustomerSaveViewModel'
      responses:
        '200':
          description: OK
          schema:
            type: object
  '/api/shoppingcart/{webkey}/add':
    post:
      tags:
        - ShoppingCart
      operationId: ShoppingCart_AddProduct
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: sessionId
          in: query
          required: true
          type: string
          format: uuid
        - name: productVM
          in: body
          required: true
          schema:
            $ref: '#/definitions/ShoppingCartProductCreateViewModel'
      responses:
        '200':
          description: OK
          schema:
            type: object
  '/api/shoppingcart/{webkey}/remove':
    delete:
      tags:
        - ShoppingCart
      operationId: ShoppingCart_RemoveProduct
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: sessionId
          in: query
          required: true
          type: string
          format: uuid
        - name: productId
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
  '/api/shoppingcart/{webkey}/update':
    put:
      tags:
        - ShoppingCart
      operationId: ShoppingCart_UpdateQuantity
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: sessionId
          in: query
          required: true
          type: string
          format: uuid
        - name: productId
          in: query
          required: true
          type: integer
          format: int32
        - name: quantity
          in: query
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
  '/api/shoppingcart/{webkey}/shippingmethod':
    put:
      tags:
        - ShoppingCart
      operationId: ShoppingCart_SetShippingMethod
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: webkey
          in: path
          required: true
          type: string
          format: uuid
        - name: sessionId
          in: query
          required: true
          type: string
          format: uuid
        - name: productId
          in: query
          required: true
          type: integer
          format: int32
        - name: shippingMethodId
          in: query
          required: true
          type: integer
          format: int32
        - name: keepProductPrice
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: object
definitions:
  PlaceOrderUpdateReturnViewModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      address:
        $ref: '#/definitions/PlaceOrderAddressResponseViewModel'
      suggestedAddress:
        $ref: '#/definitions/PlaceOrderSuggestedAddressResponseViewModel'
      isVerifiedAddress:
        type: boolean
  PlaceOrderAddressResponseViewModel:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      middleName:
        type: string
      email:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      zipCode:
        type: string
      state:
        type: string
      country:
        type: string
  PlaceOrderSuggestedAddressResponseViewModel:
    type: object
    properties:
      address1:
        type: string
      state:
        type: string
      city:
        type: string
      zipCode:
        type: string
      countryName:
        type: string
      countryCode:
        type: string
  CallbackOnpex:
    type: object
    properties:
      transactionResults:
        type: array
        items:
          $ref: '#/definitions/CallbackTransactionResultsOnpex'
      status:
        type: string
      version:
        type: string
      message:
        type: string
  CallbackTransactionResultsOnpex:
    type: object
    properties:
      txId:
        type: string
      mcTxId:
        type: string
      destTxId:
        type: string
      startDate:
        type: string
      startStamp:
        format: int64
        type: integer
      endDate:
        type: string
      endStamp:
        format: int64
        type: integer
      deltaMsec:
        format: int32
        type: integer
      message:
        type: string
      debitAmount:
        format: double
        type: number
      creditAmount:
        format: double
        type: number
      currency:
        type: string
      status:
        type: string
  CallbackAftership:
    type: object
    properties:
      event:
        type: string
      msg:
        $ref: '#/definitions/CallbackMsg'
      ts:
        type: string
  CallbackMsg:
    type: object
    properties:
      id:
        type: string
      custom_fields:
        $ref: '#/definitions/AftershipCustomFields'
      tracking_number:
        type: string
      title:
        type: string
      origin_country_iso3:
        type: string
      destination_country_iso3:
        type: string
      shipment_package_count:
        type: string
      active:
        type: string
      order_id:
        type: string
      order_id_path:
        type: string
      customer_name:
        type: string
      source:
        type: string
      emails:
        type: array
        items:
          type: string
      tag:
        type: string
      tracked_count:
        type: string
      expected_delivery:
        type: string
      signed_by:
        type: string
      shipment_type:
        type: string
      tracking_account_number:
        type: string
      tracking_postal_code:
        type: string
      tracking_ship_date:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      slug:
        type: string
      unique_token:
        type: string
      checkpoints:
        type: array
        items:
          $ref: '#/definitions/CallbackCheckpoint'
  AftershipCustomFields:
    type: object
    properties:
      client_prefix:
        type: string
  CallbackCheckpoint:
    type: object
    properties:
      country_name:
        type: string
      country_iso3:
        type: string
      state:
        type: string
      city:
        type: string
      zip:
        type: string
      message:
        type: string
      tag:
        type: string
      created_at:
        type: string
      checkpoint_time:
        type: string
      slug:
        type: string
  CampaignSettingsViewModel:
    type: object
    properties:
      campaignId:
        format: int32
        type: integer
      campaignName:
        type: string
      defaultLanguageCode:
        type: string
  CampaignCustomFieldViewModel:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  CampaignCountryViewModel:
    type: object
    properties:
      countryName:
        type: string
      countryCode:
        type: string
      currencyCode:
        type: string
      currencyName:
        type: string
      currencySign:
        type: string
  CampaignCountryStateViewModel:
    type: object
    properties:
      code:
        type: string
      name:
        type: string
  CampaignAffiliateSaveViewModel:
    required:
      - firstName
      - lastName
      - email
      - phoneNumber
    type: object
    properties:
      firstName:
        type: string
        description: user firstname
      lastName:
        type: string
      email:
        type: string
        description: email address
      phoneNumber:
        type: string
      skype:
        type: string
  CampaignUpsellItemViewModel:
    type: object
    properties:
      id:
        format: int32
        type: integer
      index:
        format: int32
        type: integer
      webKey:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      url:
        type: string
  XElement:
    type: object
    properties:
      firstAttribute:
        $ref: '#/definitions/XAttribute'
        readOnly: true
      hasAttributes:
        type: boolean
        readOnly: true
      hasElements:
        type: boolean
        readOnly: true
      isEmpty:
        type: boolean
        readOnly: true
      lastAttribute:
        $ref: '#/definitions/XAttribute'
        readOnly: true
      name:
        type: object
      nodeType:
        format: int32
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
        type: integer
        readOnly: true
      value:
        type: string
      firstNode:
        $ref: '#/definitions/XNode'
        readOnly: true
      lastNode:
        $ref: '#/definitions/XNode'
        readOnly: true
      nextNode:
        $ref: '#/definitions/XNode'
        readOnly: true
      previousNode:
        $ref: '#/definitions/XNode'
        readOnly: true
      baseUri:
        type: string
        readOnly: true
      document:
        $ref: '#/definitions/XDocument'
        readOnly: true
      parent:
        $ref: '#/definitions/XElement'
        readOnly: true
  XAttribute:
    type: object
    properties:
      isNamespaceDeclaration:
        type: boolean
        readOnly: true
      name:
        type: object
        readOnly: true
      nextAttribute:
        $ref: '#/definitions/XAttribute'
        readOnly: true
      nodeType:
        format: int32
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
        type: integer
        readOnly: true
      previousAttribute:
        $ref: '#/definitions/XAttribute'
        readOnly: true
      value:
        type: string
      baseUri:
        type: string
        readOnly: true
      document:
        $ref: '#/definitions/XDocument'
        readOnly: true
      parent:
        $ref: '#/definitions/XElement'
        readOnly: true
  XNode:
    type: object
    properties:
      nextNode:
        $ref: '#/definitions/XNode'
        readOnly: true
      previousNode:
        $ref: '#/definitions/XNode'
        readOnly: true
      baseUri:
        type: string
        readOnly: true
      document:
        $ref: '#/definitions/XDocument'
        readOnly: true
      nodeType:
        format: int32
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
        type: integer
        readOnly: true
      parent:
        $ref: '#/definitions/XElement'
        readOnly: true
  XDocument:
    type: object
    properties:
      declaration:
        $ref: '#/definitions/XDeclaration'
      documentType:
        $ref: '#/definitions/XDocumentType'
        readOnly: true
      nodeType:
        format: int32
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
        type: integer
        readOnly: true
      root:
        $ref: '#/definitions/XElement'
        readOnly: true
      firstNode:
        $ref: '#/definitions/XNode'
        readOnly: true
      lastNode:
        $ref: '#/definitions/XNode'
        readOnly: true
      nextNode:
        $ref: '#/definitions/XNode'
        readOnly: true
      previousNode:
        $ref: '#/definitions/XNode'
        readOnly: true
      baseUri:
        type: string
        readOnly: true
      document:
        $ref: '#/definitions/XDocument'
        readOnly: true
      parent:
        $ref: '#/definitions/XElement'
        readOnly: true
  XDeclaration:
    type: object
    properties:
      encoding:
        type: string
      standalone:
        type: string
      version:
        type: string
  XDocumentType:
    type: object
    properties:
      internalSubset:
        type: string
      name:
        type: string
      nodeType:
        format: int32
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
        type: integer
        readOnly: true
      publicId:
        type: string
      systemId:
        type: string
      nextNode:
        $ref: '#/definitions/XNode'
        readOnly: true
      previousNode:
        $ref: '#/definitions/XNode'
        readOnly: true
      baseUri:
        type: string
        readOnly: true
      document:
        $ref: '#/definitions/XDocument'
        readOnly: true
      parent:
        $ref: '#/definitions/XElement'
        readOnly: true
  CampaignCouponViewModel:
    type: object
    properties:
      discountBehavior:
        type: string
      discountType:
        type: string
      discount:
        format: double
        type: number
      formattedDiscount:
        type: string
      minimalPurchase:
        format: double
        type: number
      formattedMinimalPurchase:
        type: string
      isFreeShipping:
        type: boolean
  CampaignCouponCalculatedViewModel:
    type: object
    properties:
      totalDiscountedPrice:
        format: double
        type: number
      formattedTotalDiscountedPrice:
        type: string
      totalDiscountedShippingPrice:
        format: double
        type: number
      formattedTotalDiscountedShippingPrice:
        type: string
      freeShipping:
        type: boolean
  ExportCustomerViewModel:
    type: object
    properties:
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      email:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      zipCode:
        type: string
      state:
        type: string
      countryCode:
        type: string
      countryName:
        type: string
      phoneNumber:
        type: string
      ip:
        type: string
      campaignName:
        type: string
  CustomerViewModel:
    type: object
    properties:
      id:
        format: int32
        type: integer
      email:
        type: string
      customerIdentificationTypeId:
        format: int32
        type: integer
      customerIdentificationValue:
        type: string
      shippingAddress:
        type: array
        items:
          $ref: '#/definitions/AddressViewModel'
      billingAddress:
        type: array
        items:
          $ref: '#/definitions/AddressViewModel'
  AddressViewModel:
    type: object
    properties:
      id:
        format: int32
        type: integer
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      zipCode:
        type: string
      state:
        type: string
      countryCode:
        type: string
      countryName:
        type: string
      phoneNumber:
        type: string
  CustomerAddressOrderSaveViewModel:
    required:
      - orderNumbers
      - useShippingAddressForBilling
      - shippingAddress
    type: object
    properties:
      verifiedByCustomer:
        type: boolean
      customerIdentificationTypeId:
        format: int32
        type: integer
      customerIdentificationValue:
        type: string
      newCustomerEmail:
        type: string
      orderNumbers:
        type: array
        items:
          type: string
      useShippingAddressForBilling:
        type: boolean
      shippingAddress:
        $ref: '#/definitions/CustomerAddressSaveViewModel'
      billingAddress:
        $ref: '#/definitions/CustomerAddressSaveViewModel'
  CustomerAddressSaveViewModel:
    required:
      - firstName
      - lastName
      - countryCode
    type: object
    properties:
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      zipCode:
        type: string
      state:
        type: string
      countryCode:
        type: string
      phoneNumber:
        type: string
  CustomerReturnViewModel:
    type: object
    properties:
      id:
        format: int32
        type: integer
      email:
        type: string
      customerIdentificationTypeId:
        format: int32
        type: integer
      customerIdentificationValue:
        type: string
      isVerifiedAddress:
        type: boolean
      isVerifiedByCustomer:
        type: boolean
      shippingAddress:
        $ref: '#/definitions/CustomerReturnAddressViewModel'
      billingAddress:
        $ref: '#/definitions/CustomerReturnAddressViewModel'
      suggestedAddress:
        $ref: '#/definitions/CustomerReturnSuggestedAddressViewModel'
  CustomerReturnAddressViewModel:
    type: object
    properties:
      id:
        format: int32
        type: integer
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      zipCode:
        type: string
      state:
        type: string
      countryCode:
        type: string
      countryName:
        type: string
      phoneNumber:
        type: string
      isVerified:
        type: boolean
  CustomerReturnSuggestedAddressViewModel:
    type: object
    properties:
      address1:
        type: string
      city:
        type: string
      zipCode:
        type: string
      state:
        type: string
      countryCode:
        type: string
      countryName:
        type: string
  CustomerSaveViewModel:
    required:
      - email
      - useShippingAddressForBilling
      - shippingAddress
    type: object
    properties:
      email:
        type: string
      phoneNumber:
        type: string
      customerIdentificationTypeId:
        format: int32
        type: integer
      customerIdentificationValue:
        type: string
      useShippingAddressForBilling:
        type: boolean
      shippingAddress:
        $ref: '#/definitions/CustomerAddressSaveViewModel'
      billingAddress:
        $ref: '#/definitions/CustomerAddressSaveViewModel'
      analytics:
        $ref: '#/definitions/CustomerAnalyticsViewModel'
  CustomerAnalyticsViewModel:
    type: object
    properties:
      referringUrl:
        type: string
      landingUrl:
        type: string
      browser:
        type: string
      os:
        type: string
      screenResolution:
        type: string
      device:
        type: string
  CustomerAddressUpdateViewModel:
    required:
      - email
      - addressId
      - shippingAddress
    type: object
    properties:
      email:
        type: string
      addressId:
        format: int32
        type: integer
      shippingAddress:
        $ref: '#/definitions/CustomerAddressSaveViewModel'
  CustomerUpdateReturnViewModel:
    type: object
    properties:
      shippingAddress:
        $ref: '#/definitions/CustomerReturnAddressViewModel'
      suggestedAddress:
        $ref: '#/definitions/CustomerReturnSuggestedAddressViewModel'
  CustomerLocationViewModel:
    type: object
    properties:
      countryCode:
        type: string
      countryName:
        type: string
      regionCode:
        type: string
      regionName:
        type: string
      city:
        type: string
      zipCode:
        type: string
      currencyCode:
        type: string
  CustomerPwd:
    type: object
    properties:
      webkey:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      id:
        format: int32
        type: integer
      email:
        type: string
      password:
        type: string
      repeat:
        type: string
  CustomerBillingData:
    type: object
    properties:
      customerId:
        format: int32
        type: integer
      orderId:
        format: int32
        type: integer
      countryCode:
        type: string
      state:
        type: string
      city:
        type: string
      address1:
        type: string
      address2:
        type: string
      zipCode:
        type: string
      clientIP:
        type: string
      email:
        type: string
      phone:
        type: string
      cardNumber:
        type: string
      cardId:
        type: string
      cardBrand:
        type: string
      lastDigits:
        type: string
      holdersName:
        type: string
      expiryDate:
        type: string
      cvv:
        type: string
      createdOn:
        format: date-time
        type: string
  FraudAnalysisTransaction:
    type: object
    properties:
      campaignId:
        format: int32
        type: integer
      emailAddress:
        type: string
      ip:
        type: string
      creditCardCountryCode:
        type: string
      address:
        $ref: '#/definitions/CustomerAddressViewModel'
      creditCard:
        $ref: '#/definitions/CreditCardViewModel'
  CustomerAddressViewModel:
    required:
      - firstName
      - lastName
      - address1
      - city
      - countryCode
      - zipCode
    type: object
    properties:
      id:
        format: int32
        type: integer
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      state:
        type: string
      countryCode:
        type: string
      countryName:
        type: string
      zipCode:
        type: string
      phoneNumber:
        type: string
  CreditCardViewModel:
    required:
      - cardNumber
      - expirationDate
    type: object
    properties:
      cardNumber:
        type: string
      expirationDate:
        pattern: '[0-9]{2}/[0-9]{4}'
        type: string
      cvv:
        type: string
      reportedCard:
        type: boolean
      paymentProcessor:
        type: string
  FraudAnalysisResponse:
    type: object
    properties:
      isFraud:
        type: boolean
      detectedFraudRules:
        type: array
        items:
          type: string
  PlaceOrderSaveViewModel:
    required:
      - useShippingAddressForBilling
      - productId
      - payment
    type: object
    properties:
      couponCode:
        type: string
      shippingMethodId:
        format: int32
        type: integer
      comment:
        type: string
      useShippingAddressForBilling:
        type: boolean
      productId:
        format: int32
        type: integer
      campaignUpsell:
        $ref: '#/definitions/PlaceOrderUpSellSaveViewModel'
      miniUpsell:
        $ref: '#/definitions/PlaceOrderMiniUpSellSaveViewModel'
      customer:
        $ref: '#/definitions/PlaceOrderCustomerSaveViewModel'
      mid:
        $ref: '#/definitions/PlaceOrderMidSaveViewModel'
      payment:
        $ref: '#/definitions/PlaceOrderPaymentSaveViewModel'
      shippingAddress:
        $ref: '#/definitions/PlaceOrderAddressSaveViewModel'
      billingAddress:
        $ref: '#/definitions/PlaceOrderAddressSaveViewModel'
      analytics:
        $ref: '#/definitions/PlaceOrderAnalyticsViewModel'
      analyticsV2:
        $ref: '#/definitions/PlaceOrderAnalyticsBase64ViewModel'
      funnelBoxId:
        format: int32
        type: integer
      antiFraud:
        $ref: '#/definitions/PlaceOrderFraudSaveViewModel'
      callCenter:
        $ref: '#/definitions/PlaceOrderCallCenterSaveViewModel'
  PlaceOrderUpSellSaveViewModel:
    type: object
    properties:
      webKey:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      relatedOrderNumber:
        type: string
  PlaceOrderMiniUpSellSaveViewModel:
    type: object
    properties:
      productId:
        format: int32
        type: integer
      shippingMethodId:
        format: int32
        type: integer
  PlaceOrderCustomerSaveViewModel:
    required:
      - email
    type: object
    properties:
      id:
        format: int32
        type: integer
      customerIdentificationTypeId:
        format: int32
        type: integer
      customerIdentificationValue:
        type: string
      email:
        type: string
      phoneNumber:
        type: string
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      ip:
        type: string
      password:
        type: string
      salt:
        type: string
  PlaceOrderMidSaveViewModel:
    required:
      - midId
      - paymentProcessorId
      - prnCode
      - purchaseToken
    type: object
    properties:
      midId:
        format: int32
        type: integer
      paymentProcessorId:
        format: int32
        type: integer
      prnCode:
        type: string
      purchaseToken:
        type: string
  PlaceOrderPaymentSaveViewModel:
    type: object
    properties:
      paymentProcessorId:
        format: int32
        type: integer
      instalments:
        format: int32
        type: integer
      cardgatePaymentMethodId:
        format: int32
        type: integer
      cardgatePaymentIssuerId:
        format: int32
        type: integer
      name:
        type: string
      creditCard:
        type: string
      expiration:
        type: string
      cvv:
        type: string
      creditCardBrand:
        type: string
      cardId:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
  PlaceOrderAddressSaveViewModel:
    type: object
    properties:
      id:
        format: int32
        type: integer
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      zipCode:
        type: string
      state:
        type: string
      countryCode:
        type: string
      phoneNumber:
        type: string
      isVerified:
        type: boolean
  PlaceOrderAnalyticsViewModel:
    type: object
    properties:
      referringUrl:
        type: string
      landingUrl:
        type: string
      browser:
        type: string
      os:
        type: string
      screenResolution:
        type: string
      device:
        type: string
  PlaceOrderAnalyticsBase64ViewModel:
    type: object
    properties:
      referringUrl:
        type: string
      landingUrl:
        type: string
      userStringData64:
        type: string
  PlaceOrderFraudSaveViewModel:
    type: object
    properties:
      sessionId:
        type: string
  PlaceOrderCallCenterSaveViewModel:
    type: object
    properties:
      callCenterId:
        format: int32
        type: integer
      representativeName:
        type: string
  PlaceOrderSaveResponseViewModel:
    type: object
    properties:
      success:
        type: boolean
      descriptor:
        type: string
      paymentProcessorId:
        format: int32
        type: integer
      prnCode:
        type: string
      message:
        type: string
      orderNumber:
        type: string
      callBackUrl:
        type: string
      trackingNumber:
        type: string
      cardId:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      customerResult:
        $ref: '#/definitions/PlaceOrderCustomerInfoViewModel'
      paymentContinueResult:
        $ref: '#/definitions/PlaceOrderPaymentContinueResultViewModel'
      customerVerified:
        $ref: '#/definitions/PlaceOrderCustomerVerifiedResponseViewModel'
      funnelBox:
        $ref: '#/definitions/SecondaryOrderSaveResponseViewModel'
      miniUpsell:
        $ref: '#/definitions/SecondaryOrderSaveResponseViewModel'
      campaignTrackings:
        type: array
        items:
          $ref: '#/definitions/PlaceOrderCampaignTrackingSaveResponseViewModel'
      upsellTrackings:
        type: array
        items:
          $ref: '#/definitions/PlaceOrderUpsellTrackingSaveResponseViewModel'
      upsells:
        type: array
        items:
          $ref: '#/definitions/CampaignUpsellViewModel'
  PlaceOrderCustomerInfoViewModel:
    type: object
    properties:
      shippingAddressId:
        format: int32
        type: integer
      billingAddressId:
        format: int32
        type: integer
      customerId:
        format: int32
        type: integer
  PlaceOrderPaymentContinueResultViewModel:
    type: object
    properties:
      actionUrl:
        type: string
      items:
        type: array
        items:
          $ref: '#/definitions/KeyValuePair[String,String]'
  PlaceOrderCustomerVerifiedResponseViewModel:
    type: object
    properties:
      emailVerified:
        type: boolean
      shippingAddressVerified:
        type: boolean
      billingAddressVerified:
        type: boolean
      suggestedAddress:
        $ref: '#/definitions/PlaceOrderCustomerSuggestionResponseViewModel'
  SecondaryOrderSaveResponseViewModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      orderNumber:
        type: string
      descriptor:
        type: string
      paymentContinueResult:
        $ref: '#/definitions/PlaceOrderPaymentContinueResultViewModel'
  PlaceOrderCampaignTrackingSaveResponseViewModel:
    type: object
    properties:
      isPostBackActive:
        type: boolean
      tracker:
        type: string
      pixelUrl:
        type: string
      fullPixelUrl:
        type: string
  PlaceOrderUpsellTrackingSaveResponseViewModel:
    type: object
    properties:
      tracker:
        type: string
      campaignUpsellWebKey:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      campaignUpsellUrl:
        type: string
      convertionPixelUrl:
        type: string
      fullConvertionPixelUrl:
        type: string
      clickPixelUrl:
        type: string
      fullClickPixelUrl:
        type: string
  CampaignUpsellViewModel:
    type: object
    properties:
      id:
        format: int32
        type: integer
      linkedCampaignName:
        type: string
      linkedCampaignId:
        format: int32
        type: integer
      upsellUrl:
        type: string
      index:
        format: int32
        type: integer
  'KeyValuePair[String,String]':
    type: object
    properties:
      key:
        type: string
        readOnly: true
      value:
        type: string
        readOnly: true
  PlaceOrderCustomerSuggestionResponseViewModel:
    type: object
    properties:
      address1:
        type: string
      state:
        type: string
      city:
        type: string
      zipCode:
        type: string
      countryName:
        type: string
      countryCode:
        type: string
  PlaceOrderUpdateSaveViewModel:
    type: object
    properties:
      paymentProcessorId:
        format: int32
        type: integer
      trackingCountryCode:
        type: string
      trackingLanguageCountryCode:
        type: string
  PlaceOrderUpsellReturnViewModel:
    type: object
    properties:
      success:
        type: boolean
      orderNumber:
        type: string
      descriptor:
        type: string
      message:
        type: string
  PlaceOrderConfirmationReturnViewModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
  PlaceOrderBoletoReturnViewModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      actionUrl:
        type: string
  PlaceOrderMidViewModel:
    required:
      - shippingAddressCountryCode
      - creditCard
      - productId
    type: object
    properties:
      shippingAddressCountryCode:
        type: string
      creditCard:
        type: string
      creditCardBrand:
        type: string
      productId:
        format: int32
        type: integer
      ip:
        type: string
  PlaceOrderMidReturnViewModel:
    type: object
    properties:
      paymentProcessorId:
        format: int32
        type: integer
      prnCode:
        type: string
      midId:
        format: int32
        type: integer
  LatestOrdersViewModelModel:
    type: object
    properties:
      createDate:
        format: date-time
        type: string
      customerName:
        type: string
      customerLocation:
        type: string
  RelatedOrdersModel:
    type: object
    properties:
      id:
        format: int32
        type: integer
      orderNumber:
        type: string
      orderStatus:
        type: string
      languageCode:
        type: string
      currencyCode:
        type: string
      currencySign:
        type: string
      orderPrice:
        format: double
        type: number
      orderPriceUSD:
        format: double
        type: number
      ip:
        type: string
      productName:
        type: string
      orderType:
        type: string
      campaignName:
        type: string
      createDate:
        format: date-time
        type: string
      createDateOffset:
        format: date-time
        type: string
      sku:
        type: string
      category:
        type: string
      customerEmail:
        type: string
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      addressId:
        format: int32
        type: integer
      shippingAddress:
        $ref: '#/definitions/OrderAddressModel'
      receipts:
        type: array
        items:
          $ref: '#/definitions/OrdersReceiptModel'
      relatedOrders:
        type: array
        items:
          $ref: '#/definitions/OrderInfoModel'
  OrderAddressModel:
    type: object
    properties:
      id:
        format: int32
        type: integer
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      state:
        type: string
      countryCode:
        type: string
      countryName:
        type: string
      zipCode:
        type: string
      phoneNumber:
        type: string
      isVerified:
        type: boolean
      suggestion:
        $ref: '#/definitions/OrderAddressSuggestionModel'
  OrdersReceiptModel:
    type: object
    properties:
      transactionId:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      paymentStatus:
        type: string
      paymentDescription:
        type: string
      prnCode:
        type: string
      paymentNumber:
        type: string
      currencyCode:
        type: string
      amount:
        format: double
        type: number
      formattedAmount:
        type: string
      midDescriptor:
        type: string
      receiptDate:
        format: date-time
        type: string
  OrderInfoModel:
    type: object
    properties:
      id:
        format: int32
        type: integer
      orderNumber:
        type: string
      orderStatus:
        type: string
      languageCode:
        type: string
      currencyCode:
        type: string
      currencySign:
        type: string
      orderPrice:
        format: double
        type: number
      orderPriceUSD:
        format: double
        type: number
      ip:
        type: string
      productName:
        type: string
      sku:
        type: string
      category:
        type: string
      orderType:
        type: string
      campaignName:
        type: string
      createDate:
        format: date-time
        type: string
      createDateOffset:
        format: date-time
        type: string
      receipts:
        type: array
        items:
          $ref: '#/definitions/OrdersReceiptModel'
  OrderAddressSuggestionModel:
    type: object
    properties:
      address1:
        type: string
      city:
        type: string
      zipCode:
        type: string
      state:
        type: string
      countryCode:
        type: string
      countryName:
        type: string
  CustomerOrdersModel:
    type: object
    properties:
      customerEmail:
        type: string
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      shippingAddress:
        type: array
        items:
          $ref: '#/definitions/AddressViewModel'
      orders:
        type: array
        items:
          $ref: '#/definitions/OrderInfoModel'
  CampaignProductSimpleListViewModel:
    type: object
    properties:
      productId:
        format: int32
        type: integer
      productName:
        type: string
      sku:
        type: string
      message:
        type: string
      warrantyTypeId:
        format: int32
        type: integer
      warrantyPeriod:
        format: int32
        type: integer
      quantity:
        format: int32
        type: integer
      shippings:
        type: array
        items:
          $ref: '#/definitions/CampaignProductShippingViewModel'
      productPrices:
        type: array
        items:
          $ref: '#/definitions/KeyValuePair[String,CampaignProductPriceViewModel]'
  CampaignProductShippingViewModel:
    type: object
    properties:
      shippingMethodId:
        format: int32
        type: integer
      shippingName:
        type: string
      price:
        format: double
        type: number
      formattedPrice:
        type: string
  'KeyValuePair[String,CampaignProductPriceViewModel]':
    type: object
    properties:
      key:
        type: string
        readOnly: true
      value:
        $ref: '#/definitions/CampaignProductPriceViewModel'
        readOnly: true
  CampaignProductPriceViewModel:
    type: object
    properties:
      type:
        type: string
      value:
        format: double
        type: number
      formattedValue:
        type: string
      countryCode:
        type: string
      globalCurrencyCode:
        type: string
      isGlobalProductPrice:
        type: boolean
      isGlobalCampaignPrice:
        type: boolean
  CampaignProductListViewModel:
    type: object
    properties:
      productId:
        format: int32
        type: integer
      sku:
        type: string
      name:
        type: string
      imgUrlLg:
        type: string
      imgUrlSm:
        type: string
      imgUrlMd:
        type: string
      digitalProduct:
        type: boolean
      isPackage:
        type: boolean
      productPrices:
        type: array
        items:
          $ref: '#/definitions/CampaignProductPriceViewModel'
  CampaignProductViewModel:
    type: object
    properties:
      id:
        format: int32
        type: integer
      skuId:
        type: string
      name:
        type: string
      weight:
        format: double
        type: number
      unitOfMeasure:
        type: string
      imgUrlLg:
        type: string
      imgUrlSm:
        type: string
      imgUrlMd:
        type: string
      warrantyTypeId:
        format: int32
        type: integer
      warrantyPeriod:
        format: int32
        type: integer
      digitalProduct:
        type: boolean
      isPackage:
        type: boolean
      productPrices:
        type: array
        items:
          $ref: '#/definitions/CampaignProductPriceViewModel'
      productPackages:
        type: array
        items:
          $ref: '#/definitions/CampaignProductPackageViewModel'
  CampaignProductPackageViewModel:
    type: object
    properties:
      name:
        type: string
      skuId:
        type: string
      quantity:
        format: double
        type: number
      imgUrlLg:
        type: string
      imgUrlSm:
        type: string
      imgUrlMd:
        type: string
      warrantyTypeId:
        format: int32
        type: integer
      warrantyPeriod:
        format: int32
        type: integer
      digitalProduct:
        type: boolean
  ShoppingCartCreateViewModel:
    required:
      - product
    type: object
    properties:
      behaviorId:
        format: int32
        type: integer
      customerIP:
        type: string
      product:
        $ref: '#/definitions/ShoppingCartProductCreateViewModel'
  ShoppingCartProductCreateViewModel:
    required:
      - productId
      - quantity
    type: object
    properties:
      productId:
        format: int32
        type: integer
      price:
        format: double
        type: number
      quantity:
        format: int32
        maximum: 50
        minimum: 1
        type: integer
      shippingMethodId:
        format: int32
        type: integer
  ShoppingCartPublicViewModel:
    type: object
    properties:
      sessionId:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      cartNumber:
        type: string
      couponCode:
        type: string
      couponDescription:
        type: string
      products:
        type: array
        items:
          $ref: '#/definitions/ShoppingCartProductPublicViewModel'
  ShoppingCartProductPublicViewModel:
    type: object
    properties:
      productId:
        format: int32
        type: integer
      productName:
        type: string
      quantity:
        format: int32
        type: integer
      shippingMethodId:
        format: int32
        type: integer
      currencyCode:
        type: string
      price:
        format: double
        type: number
      surcharge:
        format: double
        type: number
      shippingPrice:
        format: double
        type: number
  CheckoutRequest:
    required:
      - payment
    type: object
    properties:
      behaviorId:
        format: int32
        type: integer
      sessionId:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      payment:
        $ref: '#/definitions/PaymentDetails'
      analytics:
        $ref: '#/definitions/CheckoutAnalytics'
      fraudSessionId:
        type: string
      mid:
        $ref: '#/definitions/MidPaymentDetails'
  PaymentDetails:
    type: object
    properties:
      paymentProcessorId:
        format: int32
        type: integer
      cardgatePaymentMethodId:
        format: int32
        type: integer
      cardgatePaymentIssuerId:
        format: int32
        type: integer
      instalments:
        format: int32
        type: integer
      name:
        type: string
      creditCard:
        type: string
      expiration:
        type: string
      cvv:
        type: string
      creditCardBrand:
        type: string
      cardId:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
  CheckoutAnalytics:
    type: object
    properties:
      referringUrl:
        type: string
      landingUrl:
        type: string
      browser:
        type: string
      os:
        type: string
      screenResolution:
        type: string
      device:
        type: string
  MidPaymentDetails:
    required:
      - midId
      - paymentProcessorId
      - prnCode
      - purchaseToken
    type: object
    properties:
      midId:
        format: int32
        type: integer
      paymentProcessorId:
        format: int32
        type: integer
      prnCode:
        type: string
      purchaseToken:
        type: string
  CheckoutResponse:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      shoppingCartNumber:
        type: string
      callBackUrl:
        type: string
      trackingNumber:
        type: string
      descriptor:
        type: string
      paymentContinueResult:
        $ref: '#/definitions/PaymentContinueResult'
      customerVerification:
        $ref: '#/definitions/CustomerVerification'
      campaignTrackings:
        type: array
        items:
          $ref: '#/definitions/CampaignTracking'
  PaymentContinueResult:
    type: object
    properties:
      actionUrl:
        type: string
      items:
        type: array
        items:
          $ref: '#/definitions/KeyValuePair[String,String]'
  CustomerVerification:
    type: object
    properties:
      emailVerified:
        type: boolean
      shippingAddressVerified:
        type: boolean
      billingAddressVerified:
        type: boolean
  CampaignTracking:
    type: object
    properties:
      isPostBackActive:
        type: boolean
      tracker:
        type: string
      pixelUrl:
        type: string
      fullPixelUrl:
        type: string
  ConfirmPaymentResponse:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      middleName:
        type: string
      email:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      zipCode:
        type: string
      state:
        type: string
      country:
        type: string